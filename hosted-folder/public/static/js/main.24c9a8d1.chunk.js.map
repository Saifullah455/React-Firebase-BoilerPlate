{"version":3,"sources":["configuration/firebase.js","App.js","store/action/index.js","reportWebVitals.js","store/reducer/index.js","store/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","onClick","props","facebookLogin","Component","connect","dispatch","provider","auth","FacebookAuthProvider","signInWithPopup","then","result","credential","user","accessToken","catch","error","code","message","email","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","name","photo","store","createStore","state","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"uRAYAA,IAASC,cATY,CACjBC,OAAQ,0CACRC,WAAY,iDACZC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,eACnBC,MAAO,8CAKIP,QAAf,E,eCTMQ,E,4JACJ,WAAU,IAAD,OACP,OACE,wBAAQC,QAAS,kBAAM,EAAKC,MAAMC,iBAAlC,gC,GAHYC,aAYHC,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCH,cAAe,kBAAMG,GCXZ,SAACA,GACJ,IAAIC,EAAW,IAAIf,EAASgB,KAAKC,qBACjCjB,EACKgB,OACAE,gBAAgBH,GAChBI,MAAK,SAACC,GAEH,IAAIC,EAAaD,EAAOC,WAGbD,EAAOE,KAGAD,EAAWE,eAIhCC,OAAM,SAACC,GAEYA,EAAMC,KACHD,EAAME,QAEbF,EAAMG,MAEDH,EAAMJ,qBDVxBR,CAAkCL,GELlCqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCPRO,EAAgB,CAClBC,KAAM,GACNV,MAAO,GACPW,MAAO,I,gBCGIC,EAFDC,aDEC,WAAoC,IAAnCC,EAAkC,uDAA1BL,EACpB,OAAOK,ICHwB,GAAIC,YAAgBC,MCIvDC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.24c9a8d1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyB9db0lUfsn9iDFsFJXWlkTPF6fgcAc4Ek\",\r\n    authDomain: \"react-firebase-boilerpla-f2b86.firebaseapp.com\",\r\n    projectId: \"react-firebase-boilerpla-f2b86\",\r\n    storageBucket: \"react-firebase-boilerpla-f2b86.appspot.com\",\r\n    messagingSenderId: \"759103325737\",\r\n    appId: \"1:759103325737:web:c82c4de9e3b441a3293e38\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport { facebookLogin } from './store/action';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return(\n      <button onClick={() => this.props.facebookLogin()}>Facebook Login</button>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  facebookLogin: () => dispatch(facebookLogin())\n})\n\nexport default connect(null, mapDispatchToProps)(App);\n","import firebase from '../../configuration/firebase';\r\n\r\nconst facebookLogin = () => {\r\n    return (dispatch) => {\r\n        var provider = new firebase.auth.FacebookAuthProvider();\r\n        firebase\r\n            .auth()\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                /** @type {firebase.auth.OAuthCredential} */\r\n                var credential = result.credential;\r\n\r\n                // The signed-in user info.\r\n                var user = result.user;\r\n\r\n                // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n                var accessToken = credential.accessToken;\r\n\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                // The email of the user's account used.\r\n                var email = error.email;\r\n                // The firebase.auth.AuthCredential type that was used.\r\n                var credential = error.credential;\r\n\r\n                // ...\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport {\r\n    facebookLogin\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\r\n    name: [],\r\n    email: [],\r\n    photo: []\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    return state;\r\n}","import reducer from \"./reducer\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(reducer, {}, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}